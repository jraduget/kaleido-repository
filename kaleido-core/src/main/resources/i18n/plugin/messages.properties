#****************************************************************************************
# Plugin registry messages
#****************************************************************************************
# error part
plugin.error.processor.createOutputFilePlugin=PluginAnnotationProcessor encountered unexpected IOError creating "{0}". IO init cause is: "{1}"

plugin.error.load.ioe=Processing file "{0}" : unable to load it due to IO error "{1}" 
plugin.error.load.classnotfound=Processing file "{0}" : unable to find class "{1}" in the classpath


plugin.error.load.declare.nonunique.name=Plugin name "{0}" have to be unique. Multiple declaration detected here on class "{1}"
plugin.error.load.declare.nointerface=Class "{0}" does not implements an interface annotated by @org.kaleidofoundry.core.plugin.Declare("...")
plugin.error.load.declare.all=Invalid usage of @org.kaleidofoundry.core.plugin.Declare("..."), please check following:\n{0}

plugin.error.load.declare.notaninterface=Plugin interface "{0}", must indicate an interface instead of a concrete class "{1}"
plugin.error.load.declare.notaconcreteclass=Plugin implementation file "{0}", must indicate a concrete class at the place of "{1}"

# info part
plugin.info.processor.load.createOutputFilePlugin=Creating resource "{0}" containing interfaces annotated @Declare 
plugin.info.processor.load.createOutputFilePluginImpl=Creating resource "{0}" containing classes annotated @Declare
plugin.info.processor.load.checkOk=Checking usage of kaleido annotation @Declare(...): all is OK!"

plugin.info.visitor.resource.found=Found plugin "{0}" resource "{1}"
plugin.info.visitor.resource.processing=\tProcessing @Declare {0} {1}
plugin.info.visitor.resource.linkageError=\tSkip processing @Declare {0} {1} , due to missing dependency: "{2}"
