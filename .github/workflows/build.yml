# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI build with Maven

on:
 
  push:
    branches: 
    - develop
    tags-ignore:
      - v*
  pull_request:
    branches: [ develop ]

jobs:
  build:
    name: Build and deploy to Sonatype OSS
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of SonarQube analysis

#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v2
        with: # running setup-java again overwrites the settings.xml
          java-version: '8'
          distribution: 'adopt'
          server-id: oss.sonatype.org
          server-username: OSS_SONATYPE_USERNAME
          server-password: OSS_SONATYPE_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  MAVEN_GPG_PASSPHRASE

      - name: Build with Maven
        run: mvn --batch-mode package

      - name: Publish Snapshot to Apache Maven Central
        run: mvn --batch-mode -Pkaleido-central-deploy deploy
        env:
          OSS_SONATYPE_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
          OSS_SONATYPE_PASSWORD: ${{ secrets.OSS_SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}