<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.kaleidofoundry</groupId>
	<artifactId>kaleido-parent</artifactId>
	<version>0.10.1</version>

	<name>KaleidoFoundry parent POM</name>
	<url>https://github.com/jraduget/kaleido-repository/</url>
	<description>Parent POM for all kaleido-foundry modules. It provides default build configurations.</description>
	<packaging>pom</packaging>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<prerequisites>
		<maven>3.6.3</maven>
	</prerequisites>

	<developers>
		<developer>
			<id>jraduget</id>
			<name>Jerome RADUGET</name>
			<email>jraduget@gmail.com</email>
			<timezone>+1</timezone>
			<organization>Consultant</organization>
			<roles>
				<role>Project Lead</role>
				<role>Architect</role>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<properties>
		<!-- Java version -->
		<jdk.version>1.8</jdk.version>
		<aspectj.version>1.9.6</aspectj.version>
		<!-- Logging version (logback is used only for testing) -->
		<slf4j.version>1.7.31</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<!-- Configuration parser provider -->
		<snakeyaml.version>1.28</snakeyaml.version>
		<jackson.version>2.13.1</jackson.version>
		<!-- Cache implementation version -->
		<apache-jcs-cache.version>1.3</apache-jcs-cache.version>
		<terracotta-ehcache.version>2.6.11</terracotta-ehcache.version>
		<infinispan.version>5.1.5.FINAL</infinispan.version>
		<!-- <infinispan.version>12.1.1.Final</infinispan.version> -->
		<!-- CDI -->
		<cdi.version>2.0.2</cdi.version>
		<weld.version>1.1.8.Final</weld.version>
		<!-- TODO upgrade -->
		<!-- <cdi.version>3.0.0</cdi.version> -->
		<!-- <weld.version>4.0.1.Final</weld.version> -->

		<!-- Third parties -->
		<activemq.version>5.16.2</activemq.version>

		<!-- Testing -->
		<junit.version>4.13.1</junit.version>
		<!-- Spring integration version -->
		<spring.version>5.3.14</spring.version>

		<!-- OWASP -->
		<dependency-check-maven.version>6.5.0</dependency-check-maven.version>
		<!-- source encoding options -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Control IT tests execution -->
		<skipITtests>true</skipITtests>

		<!-- Target repo deployment -->
		<snapshot.repository.id>ossrh-snapshot</snapshot.repository.id>
		<staging.repository.id>ossrh-staging</staging.repository.id>

		<snapshot.repository.url>https://oss.sonatype.org/content/repositories/snapshots</snapshot.repository.url>
		<staging.repository.url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</staging.repository.url>

	</properties>

	<modules>
		<!-- core modules -->
		<module>kaleido-core</module>
		<!-- core extensions -->
		<module>kaleido-javaee</module>
		<module>kaleido-spring</module>
		<module>kaleido-guice</module>
		<module>kaleido-appengine</module>
		<module>kaleido-messaging</module>
		<module>kaleido-mailing</module>
		<module>kaleido-bootstrap-cdi</module>

		<module>kaleido-sample</module>
		<module>kaleido-distrib</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- aop -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>

			<!-- configurations -->
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- cdi api -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>
			<dependency>
				<groupId>jakarta.enterprise</groupId>
				<artifactId>jakarta.enterprise.cdi-api</artifactId>
				<version>${cdi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.weld.se</groupId>
				<artifactId>weld-se-core</artifactId>
				<version>${weld.version}</version>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<!-- caching -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${terracotta-ehcache.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${infinispan.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jcs</groupId>
				<artifactId>jcs</artifactId>
				<version>${apache-jcs-cache.version}</version>
			</dependency>

			<!-- mailling -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>javax.mail-api</artifactId>
				<version>1.6.2</version>
			</dependency>

			<!-- logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-ext</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- Java / Jakarta EE API -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>8.0</version>
			</dependency>
			<!-- <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> 
				<version>8.0.0</version> <scope>provided</scope> </dependency> -->

			<!-- testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>2.7.8</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>5.4.31.Final</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derbyclient</artifactId>
				<version>10.14.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>10.14.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>10.0.10</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>9.4.40.v20210413</version>
			</dependency>
			<dependency>
				<groupId>org.mockftpserver</groupId>
				<artifactId>MockFtpServer</artifactId>
				<version>2.2</version>
				<exclusions>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>
		<!-- Framework for Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- Framework for testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<!-- Maven central -->
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<!-- Eclipse link for JPA provider -->
		<repository>
			<id>eclipselink-repository</id>
			<url>https://download.eclipse.org/rt/eclipselink/maven.repo</url>
			<layout>default</layout>
		</repository>
		<!-- Jboss public repository -->
		<repository>
			<id>jboss-public-repository</id>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss</url>
			<layout>default</layout>
		</repository>
		<!-- Redhat enterprise repository -->
		<repository>
			<id>redhat-repository</id>
			<url>https://maven.repository.redhat.com/ga</url>
			<layout>default</layout>
		</repository>
		<!-- Jakarta repository -->
		<repository>
			<id>jakarta-repository</id>
			<url>https://jakarta.oss.sonatype.org/content/groups/public</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>${staging.repository.id}</id>
			<url>${staging.repository.url}</url>
			<snapshots><enabled>false</enabled></snapshots>
            <releases><enabled>true</enabled></releases>
		</repository>
		<repository>
			<id>${snapshot.repository.id}</id>
			<url>${snapshot.repository.url}</url>
			<snapshots><enabled>true</enabled></snapshots>
            <releases><enabled>false</enabled></releases>
		</repository>

	</repositories>

	<scm>
		<connection>scm:git:https://github.com/jraduget/kaleido-repository.git</connection>
		<developerConnection>scm:git:https://github.com/jraduget/kaleido-repository.git</developerConnection>
		<url>https://github.com/jraduget/kaleido-repository.git/</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/jraduget/kaleido-repository/issues</url>
	</issueManagement>

	<ciManagement>
		<system>github-actions</system>
		<url>https://github.com/jraduget/kaleido-repository/actions</url>
	</ciManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- unit tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
					<configuration>
						<excludes>
							<exclude>**/IT*.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- integration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
					<configuration>
						<skipTests>${skipITtests}</skipTests>
						<includes>
							<include>**/IT*.java</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- assembly facilities -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>

				<!-- eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>maven-processor-plugin</artifactId>
										<versionRange>[2.0.0,)</versionRange>
										<goals>
											<goal>process-test</goal>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.4,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Gitflow configuration -->
            <plugin>
                <groupId>com.e-gineering</groupId>
                <artifactId>gitflow-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <extensions>true</extensions>
                <configuration>
                    <!-- Tell the plugins what repositories to use (by id) -->
                    <releaseDeploymentRepository>${staging.repository.id}</releaseDeploymentRepository>
                    <stageDeploymentRepository>${staging.repository.id}</stageDeploymentRepository>
                    <snapshotDeploymentRepository>${snapshot.repository.id}</snapshotDeploymentRepository>
                    <!-- Allow branches starting with feature/poc to be published as automagically versioned branch-name-SNAPSHOT artifacts -->
                    <otherDeployBranchPattern>(origin/)?feature/poc/.*</otherDeployBranchPattern>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce-versions</goal>
                            <goal>set-properties</goal>
                            <goal>retarget-deploy</goal>
                            <goal>update-stage-dependencies</goal>
                            <goal>tag-master</goal>
							<!-- <goal>promote-master</goal> --><!-- Disable it, catalog file is not signed by gpg -->
                        </goals>
						<!--
                        <configuration>
                            <masterBranchPropertyFile>foo/bar/prod.props</masterBranchPropertyFile>
                            <supportBranchPropertyFile>foo/bar/support.props</supportBranchPropertyFile>
                            <hotfixBranchPropertyFile>foo/bar/emer.props</hotfixBranchPropertyFile>
                            <releaseBranchPropertyFile>foo/bar/test.props</releaseBranchPropertyFile>
                            <developmentBranchPropertyFile>foo/bar/dev.props</developmentBranchPropertyFile>
                            <otherBranchPropertyFile>foo/bar/ci.props</otherBranchPropertyFile>
                            <undefinedBranchPropertyFile>foo/bar/local.props</undefinedBranchPropertyFile>
                        </configuration>
						-->
                    </execution>
                </executions>
            </plugin>			
        
			<!-- compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<!-- disable annotation processors during normal compilation, use maven-processor-plugin, 
						waiting maven compiler plugin handle it -->
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<!-- compilation ressources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<!-- annotation processor -->
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>5.0-jdk8-rc1</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
							<processors>
								<processor>org.kaleidofoundry.core.plugin.processor.PluginAnnotationProcessor</processor>
							</processors>
						</configuration>
					</execution>
					<execution>
						<id>process-test</id>
						<goals>
							<goal>process-test</goal>
						</goals>
						<phase>process-test-classes</phase>
						<configuration>
							<outputDirectory>${project.basedir}/src/test/resources</outputDirectory>
							<processors>
								<processor>org.kaleidofoundry.core.plugin.processor.PluginAnnotationProcessor</processor>
							</processors>
						</configuration>
					</execution>
				</executions>
				<dependencies />
			</plugin>
			<!-- aop compile weaving -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.11</version>
				<configuration>
					<complianceLevel>${jdk.version}</complianceLevel>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<XaddSerialVersionUID>true</XaddSerialVersionUID>
					<showWeaveInfo>false</showWeaveInfo>
					<encoding>${project.build.sourceEncoding}</encoding>
					<Xlint>ignore</Xlint>
					<!-- disable ajc annotation processing, that conflict and break the mvn build -->
					<proc>none</proc>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>       <!-- use this goal to weave all your main classes -->
							<goal>test-compile</goal>  <!-- use this goal to weave all your test classes -->
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
						<scope>compile</scope>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>
			<!-- packaging -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- packaging using revision number -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>
			<!-- staging / release -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M4</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>

		</plugins>

	</build>

	<distributionManagement>
		<repository>
			<id>${staging.repository.id}</id>
			<url>${staging.repository.url}</url>
		</repository>
		<snapshotRepository>
			<id>${snapshot.repository.id}</id>
			<url>${snapshot.repository.url}</url>
		</snapshotRepository>
	</distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>summary</report>
							<report>index</report>
							<report>project-team</report>
							<report>license</report>
							<report>modules</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>mailing-list</report>
							<report>issue-tracking</report>
							<report>plugins</report>
							<report>plugin-management</report>
							<report>scm</report>
							<report>cim</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<aggregate>true</aggregate>
					<targetJdk>${jdk.version}</targetJdk>
					<rulesets>
						<ruleset>/rulesets/braces.xml</ruleset>
						<ruleset>/rulesets/naming.xml</ruleset>
					</rulesets>
					<format>xml</format>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<minimumTokens>100</minimumTokens>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.4</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<!-- Release / Staging before maven central 
			 https://central.sonatype.org/publish/publish-guide/
		-->
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- attach sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- report -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.2.0</version>
						<configuration>
							<links>
								<link>https://download.oracle.com/javase/8/docs/api/</link>
								<link>https://docs.oracle.com/javaee/7/api/</link>
								<link>https://www.slf4j.org/api/</link>
							</links>
							<source>${jdk.version}</source>
							<docfilessubdirs>true</docfilessubdirs>
							<linksource>true</linksource>
							<failOnError>false</failOnError>
						</configuration>
						<executions>
							<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
                                <configuration>
                                    <keyname>${gpg.keyname}</keyname>
									<passphraseServerId>gpg.passphrase</passphraseServerId>
                                </configuration>
							</execution>
						</executions>
					</plugin>
					<!--  Manually stage the published gitflow release 
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.8</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh-staging</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<skipStaging>false</skipStaging>
						</configuration>
					</plugin>
					-->
					
				</plugins>
			</build>
		</profile>
		<!-- OWASP report -->
		<profile>
			<id>owasp</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.owasp</groupId>
						<artifactId>dependency-check-maven</artifactId>
						<version>${dependency-check-maven.version}</version>
						<configuration>
							<skipProvidedScope>true</skipProvidedScope>
							<skipRuntimeScope>true</skipRuntimeScope>
							<skipTestScope>true</skipTestScope>
							<formats>
								<format>HTML</format>
								<format>CSV</format>
								<format>JUNIT</format>
							</formats>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>